FROM twdps/circleci-remote-docker:slim-2024.01

LABEL org.opencontainers.image.title="circleci-base-image" \
      org.opencontainers.image.description="Debian-based CircleCI executor image" \
      org.opencontainers.image.documentation="https://github.com/ThoughtWorks-DPS/circleci-base-image" \
      org.opencontainers.image.source="https://github.com/ThoughtWorks-DPS/circleci-base-image" \
      org.opencontainers.image.url="https://github.com/ThoughtWorks-DPS/circleci-base-image" \
      org.opencontainers.image.vendor="ThoughtWorks, Inc." \
      org.opencontainers.image.authors="nic.cheneweth@thoughtworks.com" \
      org.opencontainers.image.licenses="MIT" \
      org.opencontainers.image.created="CREATED" \
      org.opencontainers.image.version="VERSION"

ENV DOCKER_VERSION=5:24.0.7-1~debian.12~bookworm
ENV DOCKER_BUILDX_VERSION=0.11.2-1~debian.12~bookworm
ENV DOCKER_COMPOSE_VERSION=2.21.0-1~debian.12~bookworm
ENV CONTAINERD_VERSION=1.6.26-1
ENV ONEPASSWORD_VERSION=2.24.0
ENV TELLER_VERSION=1.5.6
ENV VAULT_VERSION=1.15.4
ENV BUILDEVENTS_VERSION=0.15.0
ENV DEBIAN_FRONTEND=noninteractive

ENV PATH=/home/circleci/bin:/home/circleci/.local/bin:$PATH \
	LANG=en_US.UTF-8 \
	LANGUAGE=en_US:en \
	LC_ALL=en_US.UTF-8

SHELL ["/bin/bash", "-exo", "pipefail", "-c"]

# hadolint ignore=DL4001,DL3004,DL3047,DL3027
RUN echo 'APT::Get::Assume-Yes "true";' > /etc/apt/apt.conf.d/90circleci && \
    echo 'DPkg::Options "--force-confnew";' >> /etc/apt/apt.conf.d/90circleci && \
    apt update && apt-get install --no-install-recommends -y \
            sudo=1.9.15p5-2 \
            locales=2.37-13 \
            tzdata=2023d-1 \
            libcurl4-openssl-dev=8.5.0-2 \
            apt-transport-https=2.7.10 \
            lsb-release=12.0-2 \
            gettext-base=0.21-14 \
            build-essential=12.10 \
            gcc=4:13.2.0-2 \
            g++=4:13.2.0-2 \
            cmake=3.28.1-1 \
            make=4.3-4.1 \
            curl=8.5.0-2 \
            wget=1.21.4-1+b1 \
            unzip=6.0-28 \
            gzip=1.12-1 \
            zip=3.0-13 \
            bzip2=1.0.8-5+b2 \
            jq=1.7.1-2 \
            git-lfs=3.4.1-1 \
            gnupg=2.2.40-1.1 \
            gnupg-agent=2.2.40-1.1 && \
    sudo install -m 0755 -d /etc/apt/keyrings && \
    sudo bash -c "curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg" && \
    sudo chmod a+r /etc/apt/keyrings/docker.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian bookworm stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null && \
    sudo apt-get update && \
    apt-get update && apt-get install --no-install-recommends -y \
            docker-ce=${DOCKER_VERSION} \
            docker-ce-cli=${DOCKER_VERSION} \
            containerd.io=${CONTAINERD_VERSION} \
            docker-buildx-plugin=${DOCKER_BUILDX_VERSION} \
            docker-compose-plugin=${DOCKER_COMPOSE_VERSION} && \
    curl -L https://cache.agilebits.com/dist/1P/op2/pkg/v${ONEPASSWORD_VERSION}/op_linux_amd64_v${ONEPASSWORD_VERSION}.zip -o op.zip && \
    unzip -o op.zip && sudo mv op /usr/local/bin/op && \
    rm op.zip && rm op.sig && \
    curl -L https://github.com/tellerops/teller/releases/download/v${TELLER_VERSION}/teller_${TELLER_VERSION}_Linux_x86_64.tar.gz --output teller_${TELLER_VERSION}_Linux_x86_64.tar.gz && \
    tar -xzf teller_${TELLER_VERSION}_Linux_x86_64.tar.gz && \
    sudo mv teller /usr/local/bin/teller && \
    curl -SLO "https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip" > "vault_${VAULT_VERSION}_linux_amd64.zip" && \
    sudo unzip "vault_${VAULT_VERSION}_linux_amd64.zip" -d /usr/local/bin && \
    sudo rm "vault_${VAULT_VERSION}_linux_amd64.zip" && \
    curl -L -o buildevents https://github.com/honeycombio/buildevents/releases/download/v${BUILDEVENTS_VERSION}/buildevents-linux-amd64 && \
    chmod +x buildevents && \
    sudo mv buildevents /usr/local/bin/buildevents && \
    sed -i 's/^# *\(en_US.UTF-8\)/\1/' /etc/locale.gen && locale-gen && \
    useradd --uid=3434 --user-group --create-home circleci && \
    usermod --shell /bin/bash circleci && \
    echo 'circleci ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && \
    sudo -u circleci mkdir -p /home/circleci/project && \
    sudo -u circleci mkdir -p /home/circleci/bin && \
	sudo -u circleci mkdir -p /home/circleci/.local/bin && \
    sudo -u circleci mkdir /home/circleci/.gnupg && \
    sudo -u circleci bash -c "echo 'allow-loopback-pinentry' > /home/circleci/.gnupg/gpg-agent.conf" && \
    sudo -u circleci bash -c "echo 'pinentry-mode loopback' > /home/circleci/.gnupg/gpg.conf" && \
    chmod 700 /home/circleci/.gnupg && chmod 600 /home/circleci/.gnupg/* && \
    sudo apt-get clean && \
    rm -rf /var/lib/apt/lists/*

USER circleci

WORKDIR /home/circleci/project
