FROM twdps/circleci-remote-docker:alpine-2023.05.1

LABEL org.opencontainers.image.title="circleci-base-image" \
      org.opencontainers.image.description="Alpine-based CircleCI executor image" \
      org.opencontainers.image.documentation="https://github.com/ThoughtWorks-DPS/circleci-base-image" \
      org.opencontainers.image.source="https://github.com/ThoughtWorks-DPS/circleci-base-image" \
      org.opencontainers.image.url="https://github.com/ThoughtWorks-DPS/circleci-base-image" \
      org.opencontainers.image.vendor="ThoughtWorks, Inc." \
      org.opencontainers.image.authors="nic.cheneweth@thoughtworks.com" \
      org.opencontainers.image.licenses="MIT" \
      org.opencontainers.image.created="CREATED" \
      org.opencontainers.image.version="VERSION"

ENV ONEPASSWORD_BETA_VERSION=2.18.0-beta.01
ENV ONEPASSWORD_VERSION=2.17.0-r1
ENV VAULT_VERSION=1.13.2
ENV TELLER_VERSION=1.5.6
ENV BUILDEVENTS_VERSION=0.13.0

# hadolint ignore=DL3044
ENV PATH=/home/circleci/bin:/home/circleci/.local/bin:$PATH \
    MUSL_LOCPATH=/usr/share/i18n/locales/musl \
    LANG="C.UTF-8" \
    LANGUAGE="en_US.UTF-8" \
    LC_ALL="en_US.UTF-8"

ENV USER=circleci
SHELL ["/bin/ash", "-o", "pipefail", "-c"]

# hadolint ignore=DL3003,DL3004,DL4001
RUN apk add --no-cache \
        sudo==1.9.13_p3-r2 \
        wget==1.21.4-r0 \
        curl==8.1.1-r1 \
        libintl==0.21.1-r7 \
        bash==5.2.15-r5 && \
    apk --no-cache add --virtual build-dependencies \
        cmake==3.26.4-r0 \
        make==4.4.1-r1 \
        musl==1.2.4-r0 \
        musl-dev==1.2.4-r0 \
        musl-utils==1.2.4-r0 \
        gcc==12.2.1_git20220924-r10 \
        gettext-dev==0.21.1-r7 && \
    wget -q https://gitlab.com/rilian-la-te/musl-locales/-/archive/master/musl-locales-master.zip && \
    unzip musl-locales-master.zip && cd musl-locales-master && \
    cmake -DLOCALE_PROFILE=OFF -D CMAKE_INSTALL_PREFIX:PATH=/usr . && \
    make && make install && \
    cd .. && rm -r musl-locales-master && \
    curl -L https://cache.agilebits.com/dist/1P/op2/pkg/v${ONEPASSWORD_BETA_VERSION}/op_linux_amd64_v${ONEPASSWORD_BETA_VERSION}.zip -o op.zip && \
    unzip op.zip -o && sudo mv op /usr/local/bin/op && \
    rm op.zip && rm op.sig && \
    curl -SLO https://github.com/ThoughtWorks-DPS/opw/releases/latest/download/opw_Linux_x86_64.tar.gz && \
    tar -xzf opw_Linux_x86_64.tar.gz && \
    sudo mv opw /usr/local/bin/opw && \
    curl -L https://github.com/tellerops/teller/releases/download/v${TELLER_VERSION}/teller_${TELLER_VERSION}_Linux_x86_64.tar.gz --output teller_${TELLER_VERSION}_Linux_x86_64.tar.gz && \
    tar -xzf teller_${TELLER_VERSION}_Linux_x86_64.tar.gz && \
    sudo mv teller /usr/local/bin/teller && \
    curl -SLO "https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip" > "vault_${VAULT_VERSION}_linux_amd64.zip" && \
    sudo unzip "vault_${VAULT_VERSION}_linux_amd64.zip" -d /usr/local/bin && \
    sudo rm "vault_${VAULT_VERSION}_linux_amd64.zip" && \
    curl -L -o buildevents https://github.com/honeycombio/buildevents/releases/download/v${BUILDEVENTS_VERSION}/buildevents-linux-amd64 && \
    chmod +x buildevents && \
    sudo mv buildevents /usr/local/bin/buildevents && \
    addgroup --gid 3434 -S $USER && \
    adduser --uid 3434 --ingroup $USER --disabled-password $USER && \
    echo "$USER ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/$USER && \
    chmod 0440 /etc/sudoers.d/$USER && \
    sudo -u circleci mkdir /home/circleci/project && \
    apk del build-dependencies

USER circleci

WORKDIR /home/circleci/project
