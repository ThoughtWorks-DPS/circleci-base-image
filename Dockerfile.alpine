FROM twdps/circleci-remote-docker:alpine-2024.08

LABEL org.opencontainers.image.title="circleci-base-image" \
      org.opencontainers.image.description="Alpine-based CircleCI executor image" \
      org.opencontainers.image.documentation="https://github.com/ThoughtWorks-DPS/circleci-base-image" \
      org.opencontainers.image.source="https://github.com/ThoughtWorks-DPS/circleci-base-image" \
      org.opencontainers.image.url="https://github.com/ThoughtWorks-DPS/circleci-base-image" \
      org.opencontainers.image.vendor="ThoughtWorks, Inc." \
      org.opencontainers.image.authors="nic.cheneweth@thoughtworks.com" \
      org.opencontainers.image.licenses="MIT" \
      org.opencontainers.image.created="CREATED" \
      org.opencontainers.image.version="VERSION"

ENV ONEPASSWORD_VERSION=2.30.0
ENV TELLER_VERSION=2.0.7
ENV VAULT_VERSION=1.17.1
ENV BUILDEVENTS_VERSION=0.16.0

# hadolint ignore=DL3044
ENV PATH=/home/circleci/bin:/home/circleci/.local/bin:$PATH \
    MUSL_LOCPATH=/usr/share/i18n/locales/musl \
    LANG="C.UTF-8" \
    LANGUAGE="en_US.UTF-8" \
    LC_ALL="en_US.UTF-8"

SHELL ["/bin/ash", "-o", "pipefail", "-c"]

# hadolint ignore=DL3003,DL3004,DL4001,SC2035
RUN apk add --no-cache \
        sudo==1.9.15_p5-r0 \
        tzdata==2024a-r1 \
        gettext-dev==0.22.5-r0 \
        libintl==0.22.5-r0 \
        build-base==0.5-r3 \
        musl==1.2.5-r0 \
        musl-dev==1.2.5-r0 \
        musl-utils==1.2.5-r0 \
        gcc==13.2.1_git20240309-r0 \
        g++==13.2.1_git20240309-r0 \
        cmake==3.29.3-r0 \
        make==4.4.1-r2 \
        curl==8.9.0-r0 \
        libcurl==8.9.0-r0 \
        curl-dev==8.9.0-r0 \
        openssl-dev==3.3.1-r3 \
        wget==1.24.5-r0 \
        unzip==6.0-r14 \
        zip==3.0-r12 \
        bzip2=1.0.8-r6 \
        jq==1.7.1-r0 \
        git-lfs==3.5.1-r4 \
        gnupg==2.4.5-r0 \
        docker==26.1.5-r0 \
        openrc==0.54-r1 \
        xz==5.6.1-r3 \
        bash==5.2.26-r0 && \
    wget -q https://gitlab.com/rilian-la-te/musl-locales/-/archive/master/musl-locales-master.zip && \
    unzip musl-locales-master.zip && cd musl-locales-master && \
    cmake -DLOCALE_PROFILE=OFF -D CMAKE_INSTALL_PREFIX:PATH=/usr . && \
    make && make install && \
    cd .. && rm -r musl-locales-master* && \
    curl -L https://cache.agilebits.com/dist/1P/op2/pkg/v${ONEPASSWORD_VERSION}/op_linux_amd64_v${ONEPASSWORD_VERSION}.zip -o op.zip && \
    unzip op.zip && sudo mv op /usr/local/bin/op && \
    rm op.zip && rm op.sig && \
    curl -SLO "https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip" > "vault_${VAULT_VERSION}_linux_amd64.zip" && \
    sudo unzip "vault_${VAULT_VERSION}_linux_amd64.zip" -d /usr/local/bin && \
    sudo rm "vault_${VAULT_VERSION}_linux_amd64.zip" && \
    curl -L -o buildevents https://github.com/honeycombio/buildevents/releases/download/v${BUILDEVENTS_VERSION}/buildevents-linux-amd64 && \
    chmod +x buildevents && \
    sudo mv buildevents /usr/local/bin/buildevents && \
    addgroup --gid 3434 -S circleci && \
    adduser --uid 3434 --ingroup circleci --disabled-password circleci && \
    echo "circleci ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/circleci && \
    chmod 0440 /etc/sudoers.d/circleci && \
    sudo -u circleci mkdir /home/circleci/project && \
    sudo -u circleci mkdir /home/circleci/.gnupg && \
    sudo -u circleci bash -c "echo 'allow-loopback-pinentry' > /home/circleci/.gnupg/gpg-agent.conf" && \
    sudo -u circleci bash -c "echo 'pinentry-mode loopback' > /home/circleci/.gnupg/gpg.conf" && \
    chmod 700 /home/circleci/.gnupg && chmod 600 /home/circleci/.gnupg/* && \
    sudo rc-update add docker boot

USER circleci

WORKDIR /home/circleci/project

# still need to figure out how to install and actually work
# curl -L https://github.com/tellerops/teller/releases/download/v${TELLER_VERSION}/teller-x86_64-linux.tar.xz --output teller-x86_64-linux.tar.xz && \
# xz -d teller-x86_64-linux.tar.xz && \
# tar -xf teller-x86_64-linux.tar && \
# sudo mv teller-x86_64-linux/teller /usr/local/bin/teller && \
## rm teller-x86_64-linux.tar && rm -rf teller-x86_64-linux && \